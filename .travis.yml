language: node_js
node_js:
  - node
script:
  - npm run build -- --base-url $IMPORT_MAP_BASE_URL_TEST
  - mkdir -p test
  - tar cf - ./openmrs |(cd ./test; tar xvf -)
  - rm -r ./openmrs
  - echo $TRAVIS_BRANCH
  - npm run build:prod -- --base-url $IMPORT_MAP_BASE_URL_TEST
deploy:
  - provider: s3
    access_key_id: "$DIGITAL_OCEAN_SPACES_KEY_ID"
    secret_access_key: "$DIGITAL_OCEAN_SPACES_ACCESS_KEY"
    bucket: "$DIGITAL_OCEAN_SPACES_BUCKET"
    endpoint: "$DIGITAL_OCEAN_SPACES_ENDPOINT"
    cache-control: "max-age=31536000"
    local_dir: test
    skip_cleanup: true
    acl: public_read
    on:
      branch: random
  - provider: s3
    access_key_id: "$DIGITAL_OCEAN_SPACES_KEY_ID"
    secret_access_key: "$DIGITAL_OCEAN_SPACES_ACCESS_KEY"
    bucket: "$DIGITAL_OCEAN_SPACES_BUCKET_TEST"
    endpoint: "$DIGITAL_OCEAN_SPACES_ENDPOINT"
    cache-control: "max-age=31536000"
    local_dir: test
    skip_cleanup: true
    acl: public_read
    on:
      branch: master
after_deploy:
  - cd ./test/openmrs/frontend/
  - STATUS_CODE=$(curl --output /dev/null --write-out %{http_code} -u $DEPLOYER_USERNAME:$DEPLOYER_PASSWORD -d '@import-map.json' -X PATCH $DEPLOYER_HOST/import-map.json\?env=test -H "Accept:application/json" -H "Content-Type:application/json")
  - pwd
  - echo $STATUS_CODE
  - if [ "$STATUS_CODE" -ne 200 ]; then travis_terminate "$STATUS_CODE"; fi